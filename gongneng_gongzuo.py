# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gongneng.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import random
import time
from PyQt5.QtChart import *
import numpy as np
from PyQt5.QtWebEngineWidgets import *
import glo
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from qt_material import apply_stylesheet
from PyQt5 import QtSql
from PyQt5.QtSql import QSqlQuery
import xlwt
import datetime
import paragraph
import paragraph as pg
from progressbar import *
from PIL import Image
import os
from tqdm import tqdm
from deeplab import DeeplabV3
import predict
from web import *
import cv2
from PIL import Image
import sqlite3
from PIL.ImageQt import ImageQt


extra = {

    # Button colors
    'danger': '#dc3545',
    'warning': '#ffc107',
    #'success': '#17a2b8',
    'success': '#2dca1c',

    'font_family': 'Roboto',
    #'font_size': '13px',
    #'line_height': '13px',

    # Density
    #'density_scale': '0',

    # Button Shape
    'button_shape': 'default',

    'density_scale': '-1',
}



class Ui_MainWindow_gongzuo(QMainWindow):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowIcon(QIcon('logo1.png'))######界面图标
        MainWindow.resize(1473, 850)
        MainWindow.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget_4 = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget_4.setGeometry(QtCore.QRect(0, 0, 541, 471))
        self.tabWidget_4.setTabPosition(QtWidgets.QTabWidget.West)
        self.tabWidget_4.setObjectName("tabWidget_4")
        self.tab_11 = QtWidgets.QWidget()
        self.tab_11.setObjectName("tab_11")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.tab_11)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.groupBox_2 = QtWidgets.QGroupBox(self.tab_11)
        self.groupBox_2.setTitle("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.pushButton_11 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_11.setGeometry(QtCore.QRect(30, 20, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_11.setFont(font)
        self.pushButton_11.setObjectName("pushButton_11")
        self.pushButton_12 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_12.setGeometry(QtCore.QRect(280, 20, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_12.setFont(font)
        self.pushButton_12.setObjectName("pushButton_12")
        self.pushButton_13 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_13.setGeometry(QtCore.QRect(30, 80, 161, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑 Light")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.pushButton_13.setFont(font)
        self.pushButton_13.setObjectName("pushButton_13")
        self.pushButton_14 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_14.setGeometry(QtCore.QRect(280, 80, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_14.setFont(font)
        self.pushButton_14.setObjectName("pushButton_14")
        self.gridLayout_11.addWidget(self.groupBox_2, 0, 1, 1, 1)
        self.groupBox_3 = QtWidgets.QGroupBox(self.tab_11)
        self.groupBox_3.setTitle("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.progressBar_1 = QtWidgets.QProgressBar(self.groupBox_3)
        self.progressBar_1.setGeometry(QtCore.QRect(70, 90, 331, 31))
        self.progressBar_1.setProperty("value", 0)
        self.progressBar_1.setObjectName("progressBar_1")
        self.label_11 = QtWidgets.QLabel(self.groupBox_3)
        self.label_11.setGeometry(QtCore.QRect(420, 90, 71, 31))
        self.label_11.setText('0%')########进度条进度
        self.label_12 = QtWidgets.QLabel(self.groupBox_3)
        self.label_12.setGeometry(QtCore.QRect(10, 30, 71, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.lineEdit_11 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_11.setGeometry(QtCore.QRect(80, 30, 221, 31))
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.pushButton_19 = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_19.setGeometry(QtCore.QRect(330, 20, 101, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_19.setFont(font)
        self.pushButton_19.setObjectName("pushButton_19")
        self.gridLayout_11.addWidget(self.groupBox_3, 2, 1, 1, 1)
        self.groupBox = QtWidgets.QGroupBox(self.tab_11)
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.pushButton_15 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_15.setGeometry(QtCore.QRect(30, 10, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_15.setFont(font)
        self.pushButton_15.setObjectName("pushButton_15")
        self.pushButton_16 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_16.setGeometry(QtCore.QRect(280, 10, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_16.setFont(font)
        self.pushButton_16.setObjectName("pushButton_16")
        self.pushButton_17 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_17.setGeometry(QtCore.QRect(30, 80, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_17.setFont(font)
        self.pushButton_17.setObjectName("pushButton_17")
        self.pushButton_18 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_18.setGeometry(QtCore.QRect(280, 80, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_18.setFont(font)
        self.pushButton_18.setObjectName("pushButton_18")
        self.gridLayout_11.addWidget(self.groupBox, 1, 1, 1, 1)
        self.tabWidget_4.addTab(self.tab_11, "")
        self.tab_12 = QtWidgets.QWidget()
        self.tab_12.setObjectName("tab_12")
        self.gridLayout_39 = QtWidgets.QGridLayout(self.tab_12)
        self.gridLayout_39.setObjectName("gridLayout_39")
        self.groupBox_7 = QtWidgets.QGroupBox(self.tab_12)
        self.groupBox_7.setTitle("")
        self.groupBox_7.setObjectName("groupBox_7")
        self.pushButton_21 = QtWidgets.QPushButton(self.groupBox_7)
        self.pushButton_21.setGeometry(QtCore.QRect(30, 20, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_21.setFont(font)
        self.pushButton_21.setObjectName("pushButton_21")
        self.pushButton_22 = QtWidgets.QPushButton(self.groupBox_7)
        self.pushButton_22.setGeometry(QtCore.QRect(280, 20, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_22.setFont(font)
        self.pushButton_22.setObjectName("pushButton_22")
        self.pushButton_23 = QtWidgets.QPushButton(self.groupBox_7)
        self.pushButton_23.setGeometry(QtCore.QRect(30, 80, 161, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑 Light")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.pushButton_23.setFont(font)
        self.pushButton_23.setObjectName("pushButton_23")
        self.pushButton_24 = QtWidgets.QPushButton(self.groupBox_7)
        self.pushButton_24.setGeometry(QtCore.QRect(280, 80, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_24.setFont(font)
        self.pushButton_24.setObjectName("pushButton_24")
        self.gridLayout_39.addWidget(self.groupBox_7, 0, 0, 1, 1)
        self.groupBox_8 = QtWidgets.QGroupBox(self.tab_12)
        self.groupBox_8.setTitle("")
        self.groupBox_8.setObjectName("groupBox_8")
        self.pushButton_25 = QtWidgets.QPushButton(self.groupBox_8)
        self.pushButton_25.setGeometry(QtCore.QRect(30, 10, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_25.setFont(font)
        self.pushButton_25.setObjectName("pushButton_25")
        self.pushButton_26 = QtWidgets.QPushButton(self.groupBox_8)
        self.pushButton_26.setGeometry(QtCore.QRect(280, 10, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_26.setFont(font)
        self.pushButton_26.setObjectName("pushButton_26")
        self.pushButton_27 = QtWidgets.QPushButton(self.groupBox_8)
        self.pushButton_27.setGeometry(QtCore.QRect(30, 80, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_27.setFont(font)
        self.pushButton_27.setObjectName("pushButton_27")
        self.pushButton_28 = QtWidgets.QPushButton(self.groupBox_8)
        self.pushButton_28.setGeometry(QtCore.QRect(280, 80, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_28.setFont(font)
        self.pushButton_28.setObjectName("pushButton_28")
        self.gridLayout_39.addWidget(self.groupBox_8, 1, 0, 1, 1)
        self.groupBox_9 = QtWidgets.QGroupBox(self.tab_12)
        self.groupBox_9.setTitle("")
        self.groupBox_9.setObjectName("groupBox_9")
        self.progressBar_2 = QtWidgets.QProgressBar(self.groupBox_9)
        self.progressBar_2.setGeometry(QtCore.QRect(70, 90, 331, 31))
        self.progressBar_2.setProperty("value", 0)
        self.progressBar_2.setObjectName("progressBar_2")
        self.label_21 = QtWidgets.QLabel(self.groupBox_9)
        self.label_21.setGeometry(QtCore.QRect(10, 30, 71, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_21.setFont(font)
        self.label_21.setObjectName("label_21")
        self.lineEdit_21 = QtWidgets.QLineEdit(self.groupBox_9)
        self.lineEdit_21.setGeometry(QtCore.QRect(80, 30, 221, 31))
        self.lineEdit_21.setObjectName("lineEdit_21")
        self.pushButton_29 = QtWidgets.QPushButton(self.groupBox_9)
        self.pushButton_29.setGeometry(QtCore.QRect(330, 20, 101, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_29.setFont(font)
        self.pushButton_29.setObjectName("pushButton_29")
        self.gridLayout_39.addWidget(self.groupBox_9, 2, 0, 1, 1)
        self.tabWidget_4.addTab(self.tab_12, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.groupBox_10 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_10.setGeometry(QtCore.QRect(10, 10, 481, 138))
        self.groupBox_10.setTitle("")
        self.groupBox_10.setObjectName("groupBox_10")
        self.pushButton_31 = QtWidgets.QPushButton(self.groupBox_10)
        self.pushButton_31.setGeometry(QtCore.QRect(30, 20, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_31.setFont(font)
        self.pushButton_31.setObjectName("pushButton_31")
        self.pushButton_32 = QtWidgets.QPushButton(self.groupBox_10)
        self.pushButton_32.setGeometry(QtCore.QRect(280, 20, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_32.setFont(font)
        self.pushButton_32.setObjectName("pushButton_32")
        self.pushButton_33 = QtWidgets.QPushButton(self.groupBox_10)
        self.pushButton_33.setGeometry(QtCore.QRect(30, 80, 161, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑 Light")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.pushButton_33.setFont(font)
        self.pushButton_33.setObjectName("pushButton_33")
        self.pushButton_34 = QtWidgets.QPushButton(self.groupBox_10)
        self.pushButton_34.setGeometry(QtCore.QRect(280, 80, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_34.setFont(font)
        self.pushButton_34.setObjectName("pushButton_34")
        self.groupBox_12 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_12.setGeometry(QtCore.QRect(10, 150, 481, 139))
        self.groupBox_12.setTitle("")
        self.groupBox_12.setObjectName("groupBox_12")
        self.pushButton_35 = QtWidgets.QPushButton(self.groupBox_12)
        self.pushButton_35.setGeometry(QtCore.QRect(30, 10, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_35.setFont(font)
        self.pushButton_35.setObjectName("pushButton_35")
        self.pushButton_36 = QtWidgets.QPushButton(self.groupBox_12)
        self.pushButton_36.setGeometry(QtCore.QRect(280, 10, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_36.setFont(font)
        self.pushButton_36.setObjectName("pushButton_36")
        self.pushButton_37 = QtWidgets.QPushButton(self.groupBox_12)
        self.pushButton_37.setGeometry(QtCore.QRect(30, 80, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_37.setFont(font)
        self.pushButton_37.setObjectName("pushButton_37")
        self.pushButton_38 = QtWidgets.QPushButton(self.groupBox_12)
        self.pushButton_38.setGeometry(QtCore.QRect(280, 80, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_38.setFont(font)
        self.pushButton_38.setObjectName("pushButton_38")
        self.groupBox_13 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_13.setGeometry(QtCore.QRect(10, 290, 481, 171))
        self.groupBox_13.setTitle("")
        self.groupBox_13.setObjectName("groupBox_13")
        self.progressBar_3 = QtWidgets.QProgressBar(self.groupBox_13)
        self.progressBar_3.setGeometry(QtCore.QRect(70, 90, 331, 31))
        self.progressBar_3.setProperty("value", 0)
        self.progressBar_3.setObjectName("progressBar_3")
        self.label_31 = QtWidgets.QLabel(self.groupBox_13)
        self.label_31.setGeometry(QtCore.QRect(10, 30, 71, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_31.setFont(font)
        self.label_31.setObjectName("label_31")
        self.lineEdit_31 = QtWidgets.QLineEdit(self.groupBox_13)
        self.lineEdit_31.setGeometry(QtCore.QRect(80, 30, 221, 31))
        self.lineEdit_31.setObjectName("lineEdit_31")
        self.pushButton_39 = QtWidgets.QPushButton(self.groupBox_13)
        self.pushButton_39.setGeometry(QtCore.QRect(330, 20, 101, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_39.setFont(font)
        self.pushButton_39.setObjectName("pushButton_39")
        self.tabWidget_4.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.groupBox_14 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_14.setGeometry(QtCore.QRect(10, 10, 481, 138))
        self.groupBox_14.setTitle("")
        self.groupBox_14.setObjectName("groupBox_14")
        self.pushButton_41 = QtWidgets.QPushButton(self.groupBox_14)
        self.pushButton_41.setGeometry(QtCore.QRect(30, 20, 161, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_41.setFont(font)
        self.pushButton_41.setObjectName("pushButton_41")
        self.pushButton_42 = QtWidgets.QPushButton(self.groupBox_14)
        self.pushButton_42.setGeometry(QtCore.QRect(280, 20, 161, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(11)
        self.pushButton_42.setFont(font)
        self.pushButton_42.setObjectName("pushButton_42")
        self.pushButton_43 = QtWidgets.QPushButton(self.groupBox_14)
        self.pushButton_43.setGeometry(QtCore.QRect(30, 80, 161, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.pushButton_43.setFont(font)
        self.pushButton_43.setObjectName("pushButton_43")
        self.pushButton_44 = QtWidgets.QPushButton(self.groupBox_14)
        self.pushButton_44.setGeometry(QtCore.QRect(280, 80, 161, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(11)
        self.pushButton_44.setFont(font)
        self.pushButton_44.setObjectName("pushButton_44")
        self.groupBox_15 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_15.setGeometry(QtCore.QRect(10, 150, 481, 139))
        self.groupBox_15.setTitle("")
        self.groupBox_15.setObjectName("groupBox_15")
        self.pushButton_45 = QtWidgets.QPushButton(self.groupBox_15)
        self.pushButton_45.setGeometry(QtCore.QRect(30, 10, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_45.setFont(font)
        self.pushButton_45.setObjectName("pushButton_45")
        self.pushButton_46 = QtWidgets.QPushButton(self.groupBox_15)
        self.pushButton_46.setGeometry(QtCore.QRect(280, 10, 161, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(11)
        self.pushButton_46.setFont(font)
        self.pushButton_46.setObjectName("pushButton_46")
        self.pushButton_47 = QtWidgets.QPushButton(self.groupBox_15)
        self.pushButton_47.setGeometry(QtCore.QRect(30, 80, 161, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(11)
        self.pushButton_47.setFont(font)
        self.pushButton_47.setObjectName("pushButton_47")
        self.pushButton_48 = QtWidgets.QPushButton(self.groupBox_15)
        self.pushButton_48.setGeometry(QtCore.QRect(280, 80, 161, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(11)
        self.pushButton_48.setFont(font)
        self.pushButton_48.setObjectName("pushButton_48")
        self.groupBox_16 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_16.setGeometry(QtCore.QRect(10, 290, 481, 161))
        self.groupBox_16.setTitle("")
        self.groupBox_16.setObjectName("groupBox_16")
        self.progressBar_4 = QtWidgets.QProgressBar(self.groupBox_16)
        self.progressBar_4.setGeometry(QtCore.QRect(70, 90, 331, 31))
        self.progressBar_4.setProperty("value", 0)
        self.progressBar_4.setObjectName("progressBar_4")
        self.label_41 = QtWidgets.QLabel(self.groupBox_16)
        self.label_41.setGeometry(QtCore.QRect(10, 30, 71, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_41.setFont(font)
        self.label_41.setObjectName("label_41")
        self.lineEdit_41 = QtWidgets.QLineEdit(self.groupBox_16)
        self.lineEdit_41.setGeometry(QtCore.QRect(80, 30, 221, 31))
        self.lineEdit_41.setObjectName("lineEdit_41")
        self.pushButton_49 = QtWidgets.QPushButton(self.groupBox_16)
        self.pushButton_49.setGeometry(QtCore.QRect(330, 20, 101, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(11)
        self.pushButton_49.setFont(font)
        self.pushButton_49.setObjectName("pushButton_49")
        self.tabWidget_4.addTab(self.tab_2, "")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 490, 1171, 320))
        self.tabWidget.setTabsClosable(True)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.tab_3)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.widget = QtWidgets.QWidget(self.tab_3)
        self.widget.setObjectName("widget")
        self.groupBox_4 = QtWidgets.QGroupBox(self.widget)
        self.groupBox_4.setGeometry(QtCore.QRect(0, 0, 591, 314))
        self.groupBox_4.setTitle("")
        self.groupBox_4.setObjectName("groupBox_4")
        self.groupBox_5 = QtWidgets.QGroupBox(self.groupBox_4)
        self.groupBox_5.setGeometry(QtCore.QRect(10, 0, 261, 311))
        self.groupBox_5.setTitle("")
        self.groupBox_5.setObjectName("groupBox_5")
        self.pushButton_1 = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton_1.setGeometry(QtCore.QRect(10, 20, 240, 51))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(14)
        self.pushButton_1.setFont(font)
        self.pushButton_1.setObjectName("pushButton_1")
        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton_2.setGeometry(QtCore.QRect(10, 100, 240, 51))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(14)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton_3.setGeometry(QtCore.QRect(10, 180, 240, 51))
        self.pushButton_3.setObjectName("pushButton_3")
        self.groupBox_6 = QtWidgets.QGroupBox(self.groupBox_4)
        self.groupBox_6.setGeometry(QtCore.QRect(280, -1, 301, 311))
        self.groupBox_6.setTitle("")
        self.groupBox_6.setObjectName("groupBox_6")
        self.groupBox_17 = QtWidgets.QGroupBox(self.groupBox_6)
        self.groupBox_17.setGeometry(QtCore.QRect(9, -1, 281, 151))
        self.groupBox_17.setObjectName("groupBox_17")
        self.horizontalSlider = QtWidgets.QSlider(self.groupBox_17)
        self.horizontalSlider.setGeometry(QtCore.QRect(30, 70, 211, 22))
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.horizontalSlider.setMinimum(0)  # 最小值
        self.horizontalSlider.setMaximum(100)  # 最大值
        self.horizontalSlider.setSingleStep(1)
        self.label_slider1 = QLabel(self.groupBox_17)
        self.label_slider1.setGeometry(QtCore.QRect(120, 100, 50, 50))
        self.label_slider1.setText(" ")
        self.groupBox_18 = QtWidgets.QGroupBox(self.groupBox_6)
        self.groupBox_18.setGeometry(QtCore.QRect(10, 149, 281, 151))
        self.groupBox_18.setObjectName("groupBox_18")
        self.horizontalSlider_2 = QtWidgets.QSlider(self.groupBox_18)
        self.horizontalSlider_2.setGeometry(QtCore.QRect(30, 60, 211, 22))
        self.horizontalSlider_2.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_2.setObjectName("horizontalSlider_2")
        self.horizontalSlider_2.setMinimum(0)  # 最小值
        self.horizontalSlider_2.setMaximum(100)  # 最大值
        self.label_slider2 = QLabel(self.groupBox_18)
        self.label_slider2.setGeometry(QtCore.QRect(120, 80, 50, 50))


        #self.label_slider2.setText(" ")
        #self.label = QtWidgets.QLabel(self.widget)
        #self.label.setGeometry(QtCore.QRect(600, 10, 541, 291))
        #self.label.setText("")
        #self.label.setPixmap(QtGui.QPixmap('hello.jpg'))
        #self.label.setScaledContents(True)
        #self.label.setObjectName("label")
        self.myChart = TestChart()######图线
        self.chartView=QChartView(self.myChart,self.widget)#####图表
        self.chartView.setRenderHint(QPainter.Antialiasing)  # 抗锯齿
        self.chartView.setGeometry(QtCore.QRect(600, 10, 541, 291))
        self.chartView.setAutoFillBackground(True)
        self.gridLayout_6.addWidget(self.widget, 0, 0, 1, 1)
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_18 = QtWidgets.QWidget()
        self.tab_18.setObjectName("tab_18")
        self.gridLayout_35 = QtWidgets.QGridLayout(self.tab_18)
        self.gridLayout_35.setObjectName("gridLayout_35")
        self.tableWidget_2 = QtWidgets.QTableWidget(self.tab_18)#####详细信息表格
        self.tableWidget_2.setAlternatingRowColors(True)
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(4)
        self.tableWidget_2.setRowCount(200)
        item = QtWidgets.QTableWidgetItem()

        self.tableWidget_2.setHorizontalHeaderItem(0, item)###表头一
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(1, item)###表头二
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(2, item)###表头三
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(3, item)###表头四
        item = QtWidgets.QTableWidgetItem()

        item = QtWidgets.QTableWidgetItem()
        item.setFlags(
            QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEditable | QtCore.Qt.ItemIsDragEnabled | QtCore.Qt.ItemIsDropEnabled | QtCore.Qt.ItemIsUserCheckable)
        self.tableWidget_2.setItem(23, 1, item)
        self.tableWidget_2.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_35.addWidget(self.tableWidget_2, 0, 0, 1, 1)
        self.tabWidget.addTab(self.tab_18, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.tableWidget_3 = QtWidgets.QTableWidget(self.tab_4)####登录信息表格
        self.tableWidget_3.setGeometry(QtCore.QRect(10, 10, 1147, 264))
        self.tableWidget_3.setAlternatingRowColors(True)
        self.tableWidget_3.setObjectName("tableWidget_3")
        self.tableWidget_3.setColumnCount(5)
        self.tableWidget_3.setRowCount(23)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(18, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(19, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(20, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(21, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(22, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(2, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(2, 4, item)
        self.tableWidget_3.horizontalHeader().setStretchLastSection(True)
        self.tabWidget.addTab(self.tab_4, "")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(17, 470, 1161, 20))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.dockWidget = QtWidgets.QDockWidget(self.centralwidget)
        self.dockWidget.setGeometry(QtCore.QRect(1210, 150, 257, 701))
        self.dockWidget.setObjectName("dockWidget")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.gridLayout_26 = QtWidgets.QGridLayout(self.dockWidgetContents)
        self.gridLayout_26.setObjectName("gridLayout_26")
        self.textEdit_2 = QtWidgets.QTextEdit(self.dockWidgetContents)#####异常报告
        self.textEdit_2.setObjectName("textEdit_2")
        self.gridLayout_26.addWidget(self.textEdit_2, 1, 0, 1, 1)
        self.textEdit = QtWidgets.QTextEdit(self.dockWidgetContents)#####设备运转情况
        self.textEdit.setObjectName("textEdit")
        self.gridLayout_26.addWidget(self.textEdit, 0, 0, 1, 1)
        self.dockWidget.setWidget(self.dockWidgetContents)
        self.line_5 = QtWidgets.QFrame(self.centralwidget)
        self.line_5.setGeometry(QtCore.QRect(1180, 10, 20, 831))
        self.line_5.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(1180, 50, 81, 51))
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(1233, 20, 121, 101))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("work.jpg"))#######操作员图片
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(1360, 40, 101, 31))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(1360, 80, 101, 31))
        self.label_4.setObjectName("label_4")
        self.groupBox_11 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_11.setGeometry(QtCore.QRect(550, 10, 621, 461))
        self.groupBox_11.setTitle("")
        self.groupBox_11.setObjectName("groupBox_11")
        self.label_tupian = QtWidgets.QLabel(self.groupBox_11)
        self.label_tupian.setGeometry(QtCore.QRect(10, 10, 420, 410))
        # self.label_tupian.setText('ijidjfiififio')
        # pix = QPixmap('hello.jpg')
        # self.label_tupian.setPixmap(pix)
        self.label_tupian.setGeometry(0, 0, 700, 380)
        self.label_tupian.setObjectName("label_tupian")

        self.pushButton_danger = QtWidgets.QPushButton(self.groupBox_11)
        self.pushButton_danger.setGeometry(QtCore.QRect(10, 410, 191, 41))
        self.pushButton_danger.setObjectName("pushButton_danger")
        self.pushButton_working = QtWidgets.QPushButton(self.groupBox_11)
        self.pushButton_working.setGeometry(QtCore.QRect(220, 410, 191, 41))
        self.pushButton_working.setObjectName("pushButton_working")
        self.pushButton_warning = QtWidgets.QPushButton(self.groupBox_11)
        self.pushButton_warning.setGeometry(QtCore.QRect(420, 410, 191, 41))
        self.pushButton_warning.setObjectName("pushButton_warning")
        self.line_2 = QtWidgets.QFrame(self.groupBox_11)
        self.line_2.setGeometry(QtCore.QRect(10, 380, 611, 20))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget_4.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "自动开采管理平台"))
        self.pushButton_11.setText(_translate("MainWindow", "图片检测"))
        self.pushButton_12.setText(_translate("MainWindow", "视频检测"))
        self.pushButton_13.setText(_translate("MainWindow", "文件夹检测"))
        self.pushButton_14.setText(_translate("MainWindow", "启用摄像头"))
        self.label_12.setText(_translate("MainWindow", "文件位置："))
        self.pushButton_19.setText(_translate("MainWindow", "确定"))
        self.pushButton_15.setText(_translate("MainWindow", "启动"))
        self.pushButton_16.setText(_translate("MainWindow", "导入"))
        self.pushButton_17.setText(_translate("MainWindow", "保存到数据库"))
        self.pushButton_18.setText(_translate("MainWindow", "导出xls文件"))
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_11), _translate("MainWindow", "矿井一"))
        self.pushButton_21.setText(_translate("MainWindow", "图片检测"))
        self.pushButton_22.setText(_translate("MainWindow", "视频检测"))
        self.pushButton_23.setText(_translate("MainWindow", "文件夹检测"))
        self.pushButton_24.setText(_translate("MainWindow", "启用摄像头"))
        self.pushButton_25.setText(_translate("MainWindow", "启动"))
        self.pushButton_26.setText(_translate("MainWindow", "导入"))
        self.pushButton_27.setText(_translate("MainWindow", "保存到数据库"))
        self.pushButton_28.setText(_translate("MainWindow", "导出xls文件"))
        self.label_21.setText(_translate("MainWindow", "文件位置："))
        self.pushButton_29.setText(_translate("MainWindow", "确定"))
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_12), _translate("MainWindow", "矿井二"))
        self.pushButton_31.setText(_translate("MainWindow", "图片检测"))
        self.pushButton_32.setText(_translate("MainWindow", "视频检测"))
        self.pushButton_33.setText(_translate("MainWindow", "文件夹检测"))
        self.pushButton_34.setText(_translate("MainWindow", "启用摄像头"))
        self.pushButton_35.setText(_translate("MainWindow", "启动"))
        self.pushButton_36.setText(_translate("MainWindow", "导入"))
        self.pushButton_37.setText(_translate("MainWindow", "保存到数据库"))
        self.pushButton_38.setText(_translate("MainWindow", "导出xls文件"))
        self.label_31.setText(_translate("MainWindow", "文件位置："))
        self.pushButton_39.setText(_translate("MainWindow", "确定"))
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab), _translate("MainWindow", "矿井三"))
        self.pushButton_41.setText(_translate("MainWindow", "图片检测"))
        self.pushButton_42.setText(_translate("MainWindow", "视频检测"))
        self.pushButton_43.setText(_translate("MainWindow", "文件夹检测"))
        self.pushButton_44.setText(_translate("MainWindow", "启用摄像头"))
        self.pushButton_45.setText(_translate("MainWindow", "启动"))
        self.pushButton_46.setText(_translate("MainWindow", "导入"))
        self.pushButton_47.setText(_translate("MainWindow", "保存到数据库"))
        self.pushButton_48.setText(_translate("MainWindow", "导出xls文件"))
        self.label_41.setText(_translate("MainWindow", "文件位置："))
        self.pushButton_49.setText(_translate("MainWindow", "确定"))
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_2), _translate("MainWindow", "矿井四"))
        self.pushButton_1.setText(_translate("MainWindow", "管理平台"))
        self.pushButton_2.setText(_translate("MainWindow", "图像"))
        self.pushButton_3.setText(_translate("MainWindow", "关闭摄像头"))
        self.groupBox_17.setTitle(_translate("MainWindow", "机体水平状态"))######滑动条一
        self.groupBox_18.setTitle(_translate("MainWindow", "机体垂直状态"))######滑动条二
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Widgets"))
        self.tableWidget_2.setRowCount(200)
        item = self.tableWidget_2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "矿井"))######设置表头一
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "时间"))######设置表头二
        item = self.tableWidget_2.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "煤像素点"))###设置表头三
        item = self.tableWidget_2.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "煤占比"))####设置表头四

        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_18), _translate("MainWindow", "详细数据"))###第二页
        item = self.tableWidget_3.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget_3.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.tableWidget_3.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.tableWidget_3.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.tableWidget_3.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.tableWidget_3.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.tableWidget_3.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.tableWidget_3.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.tableWidget_3.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.tableWidget_3.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.tableWidget_3.verticalHeaderItem(10)
        item.setText(_translate("MainWindow", "11"))
        item = self.tableWidget_3.verticalHeaderItem(11)
        item.setText(_translate("MainWindow", "12"))
        item = self.tableWidget_3.verticalHeaderItem(12)
        item.setText(_translate("MainWindow", "13"))
        item = self.tableWidget_3.verticalHeaderItem(13)
        item.setText(_translate("MainWindow", "14"))
        item = self.tableWidget_3.verticalHeaderItem(14)
        item.setText(_translate("MainWindow", "15"))
        item = self.tableWidget_3.verticalHeaderItem(15)
        item.setText(_translate("MainWindow", "16"))
        item = self.tableWidget_3.verticalHeaderItem(16)
        item.setText(_translate("MainWindow", "17"))
        item = self.tableWidget_3.verticalHeaderItem(17)
        item.setText(_translate("MainWindow", "18"))
        item = self.tableWidget_3.verticalHeaderItem(18)
        item.setText(_translate("MainWindow", "19"))
        item = self.tableWidget_3.verticalHeaderItem(19)
        item.setText(_translate("MainWindow", "20"))
        item = self.tableWidget_3.verticalHeaderItem(20)
        item.setText(_translate("MainWindow", "21"))
        item = self.tableWidget_3.verticalHeaderItem(21)
        item.setText(_translate("MainWindow", "22"))
        item = self.tableWidget_3.verticalHeaderItem(22)
        item.setText(_translate("MainWindow", "23"))
        item = self.tableWidget_3.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "姓名"))
        item = self.tableWidget_3.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "性别"))
        item = self.tableWidget_3.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "登录地点"))
        item = self.tableWidget_3.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "登录时间"))
        item = self.tableWidget_3.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "授权范围"))
        __sortingEnabled = self.tableWidget_3.isSortingEnabled()
        self.tableWidget_3.setSortingEnabled(False)
        item = self.tableWidget_3.item(0, 0)
        item.setText(_translate("MainWindow", "张三"))
        item = self.tableWidget_3.item(0, 1)
        item.setText(_translate("MainWindow", "男"))
        item = self.tableWidget_3.item(0, 2)
        item.setText(_translate("MainWindow", "陕西省西安市临潼区"))
        item = self.tableWidget_3.item(0, 3)
        item.setText(_translate("MainWindow", "2022.3.14 11：50"))
        item = self.tableWidget_3.item(0, 4)
        item.setText(_translate("MainWindow", "全部"))
        item = self.tableWidget_3.item(1, 0)
        item.setText(_translate("MainWindow", "李四"))
        item = self.tableWidget_3.item(1, 1)
        item.setText(_translate("MainWindow", "男"))
        item = self.tableWidget_3.item(1, 2)
        item.setText(_translate("MainWindow", "黑龙江省哈尔滨市南岗区"))
        item = self.tableWidget_3.item(1, 3)
        item.setText(_translate("MainWindow", "2022.3.22 12：36"))
        item = self.tableWidget_3.item(1, 4)
        item.setText(_translate("MainWindow", "全部"))
        item = self.tableWidget_3.item(2, 0)
        item.setText(_translate("MainWindow", "王晓美"))
        item = self.tableWidget_3.item(2, 1)
        item.setText(_translate("MainWindow", "女"))
        item = self.tableWidget_3.item(2, 2)
        item.setText(_translate("MainWindow", "陕西省西安市雁塔区"))
        item = self.tableWidget_3.item(2, 3)
        item.setText(_translate("MainWindow", "2022.3.28 10：16"))
        item = self.tableWidget_3.item(2, 4)
        item.setText(_translate("MainWindow", "全部"))
        self.tableWidget_3.setSortingEnabled(__sortingEnabled)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "登录信息"))###第三页
        self.dockWidget.setWindowTitle(_translate("MainWindow", "实时数据"))
        self.textEdit_2.setPlainText(_translate("MainWindow"," 异常监控："))
        self.textEdit.setMarkdown(_translate("MainWindow", "设备运转情况："))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:6px; margin-bottom:6px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Noto Sans\'; font-size:8pt;\">设备运转情况：</span></p></body></html>"))
        self.label_3.setText(_translate("MainWindow", "操作人员:admin"))######操作人员label
        self.label_4.setText(_translate("MainWindow", "2022-3-20"))######时间label
        self.pushButton_danger.setText(_translate("MainWindow", "Danger"))
        self.pushButton_danger.setProperty("class", _translate("MainWindow", "danger"))######设置按钮颜色
        self.pushButton_working.setText(_translate("MainWindow", "Working"))
        self.pushButton_working.setProperty("class", _translate("MainWindow", "success"))####设置按钮颜色
        self.pushButton_warning.setText(_translate("MainWindow", "Warning"))
        self.pushButton_warning.setProperty("class", _translate("MainWindow", "warning"))####设置按钮颜色
        self.textEdit_2.setProperty("class", QtCore.QCoreApplication.translate("textEdit_2", "danger"))###设置异常监控文字颜色

        self.web = Ui_Web()
        self.pushButton_1.clicked.connect(self.web.show)#####管理平台
        self.pushButton_2.clicked.connect(self.tuxiang)######图像
        self.pushButton_3.clicked.connect(self.guanbi)#######关闭摄像头

        self.pushButton_11.clicked.connect(self.getpic)###########图片检测
        self.pushButton_12.clicked.connect(self.getvideo)#########视频检测
        self.pushButton_13.clicked.connect(self.getdir)###########文件夹检测
        self.pushButton_14.clicked.connect(self.shibievideo111)###启动摄像头
        self.pushButton_15.clicked.connect(self.on_clicked)#######启动
        self.pushButton_16.clicked.connect(self.send_data)########导入
        self.pushButton_17.clicked.connect(self.shujuku)##########保存到数据库
        self.pushButton_18.clicked.connect(self.xls)##############导出xls表格
        self.pushButton_19.clicked.connect(self.tiaozhuan1)#######确定

        self.pushButton_21.clicked.connect(self.getpic)
        self.pushButton_22.clicked.connect(self.getvideo)
        self.pushButton_23.clicked.connect(self.getdir)
        self.pushButton_24.clicked.connect(self.shexiangtou)
        self.pushButton_25.clicked.connect(self.tableWidget_2.show)
        self.pushButton_26.clicked.connect(self.send_data)
        self.pushButton_27.clicked.connect(self.shujuku)
        self.pushButton_28.clicked.connect(self.xls)
        self.pushButton_29.clicked.connect(self.tiaozhuan2)

        self.pushButton_31.clicked.connect(self.getpic)
        self.pushButton_32.clicked.connect(self.getvideo)
        self.pushButton_33.clicked.connect(self.getdir)
        self.pushButton_34.clicked.connect(self.shexiangtou)
        self.pushButton_35.clicked.connect(self.tableWidget_2.show)
        self.pushButton_36.clicked.connect(self.send_data)
        self.pushButton_37.clicked.connect(self.shujuku)
        self.pushButton_38.clicked.connect(self.xls)
        self.pushButton_39.clicked.connect(self.tiaozhuan3)

        self.pushButton_41.clicked.connect(self.getpic)
        self.pushButton_42.clicked.connect(self.getvideo)
        self.pushButton_43.clicked.connect(self.getdir)
        self.pushButton_44.clicked.connect(self.shexiangtou)
        self.pushButton_45.clicked.connect(self.tableWidget_2.show)
        self.pushButton_46.clicked.connect(self.send_data)
        self.pushButton_47.clicked.connect(self.shujuku)
        self.pushButton_48.clicked.connect(self.xls)
        self.pushButton_49.clicked.connect(self.tiaozhuan4)

        self.thread = MyThread()
        self.progressBar_1.setMinimum(0)
        self.progressBar_1.setMaximum(100)
        self.timer = QBasicTimer()
        self.step = 0
        self.timer.start(100, self)


        self.thread_2 = MyThread_2()
        self.thread_3 = MyThread_3()
        self.thread_4 = MyThread_4()
        self.thread_5 = MyThread_5()
        self.thread_6 = MyThread_6()
        self.thread_7 = MyThread_7()
        self.thread_8 = MyThread_8()
        self.thread_9 = MyThread_9()
        self.thread_10 = MyThread_10()
        # 单击按钮的槽
    def on_clicked(self):

        self.thread_3.send_signal_3.connect(self.switch_slot)######设备运转情况
        self.thread_3.start()
        self.thread_5.start()
        self.thread_5.send_signal_5.connect(self.get_slider1)######机体水平状态
        self.thread_6.start()
        self.thread_6.send_signal_6.connect(self.get_slider2)######机体垂直状态
        self.thread_7.start()
        self.thread_7.send_signal_7.connect(self.deng)#########报警灯
        #self.workthread.start()
        self.thread_5.send_signal_5.connect(self.threading_slot1)#####图线一
        self.thread_6.send_signal_6.connect(self.threading_slot2)#####图线二

        # 连接信号的槽
    def switch_slot(self, text):
        # 追加文本到文本框
        #self.pushButton_working.setDown(True)
       # time.sleep(1)
        self.textEdit.append(text + ":工作正常")

    def tuxiang(self):
        paragraph.view.show()
        pg.exec()

    def shexiangtou(self):
       self.shibievideo111(self,"1")

    def getpic(self):
        #self.thread_2.my_signal_2.connect(self.slot_2)
        self.thread_2.start()

    def getvideo(self):
        self.fileName2, self.fileType2 = QFileDialog.getOpenFileName(None, "选取文件", "./",
                                                                     "All Files (*);;Excel Files (*.xls)")  # 设置文件扩展名过滤,注意用双分号间隔
        self.shibievideo222(str(self.fileName2))

    def guanbi(self):
        glo.ttt = 100

    def tiaozhuan1(self):
        predict.shibievideo(str(self.lineEdit11.text()))
        # glo.jjjj=ttest.caozuo(glo.jjjj)
    def tiaozhuan2(self):
        predict.shibievideo(str(self.lineEdit21.text()))
    def tiaozhuan3(self):
        predict.shibievideo(str(self.lineEdit31.text()))
    def tiaozhuan4(self):
        predict.shibievideo(str(self.lineEdit41.text()))

    def shujuku(self):
        database = QtSql.QSqlDatabase.addDatabase('QSQLITE')
        database.setDatabaseName('mysql.db')
        database.open()
        query = QSqlQuery()  #######
        query.prepare('create table shuju (time varchar(50),xiangsu varchar(30),zhanbi varchar(30))')
        if not query.exec_():
            query.lastError()
        else:
            print('create a table')
        for i in range(len(glo.A)):
            now_time2 = datetime.datetime.now()
            now_time2_str = datetime.datetime.strftime(now_time2, '%Y-%m-%d-%H:%M:%S')
            insert_sql = 'insert into shuju values (?,?,?)'
            query.prepare(insert_sql)
            query.addBindValue(now_time2_str)
            query.addBindValue(glo.A[i])
            query.addBindValue(glo.B[i])
            query.execBatch()
            if not query.exec_():
                print(query.lastError())
            else:
                print('inserted')

    def send_data(self):
        for row in range(len(glo.A)):
            item1 = str(glo.A[row])
            item2 = str(glo.B[row])
            now_time1 = datetime.datetime.now()
            now_time1_str = datetime.datetime.strftime(now_time1, '%Y-%m-%d-%H:%M:%S')
            self.tableWidget_2.setItem(row, 0, QTableWidgetItem("矿井一"))
            self.tableWidget_2.setItem(row, 1, QTableWidgetItem(now_time1_str))
            self.tableWidget_2.setItem(row, 2, QTableWidgetItem(item1))
            self.tableWidget_2.setItem(row, 3, QTableWidgetItem(item2))

    def shibievideo222(self,kk):#视频检测
        deeplab = DeeplabV3()
        nnn = Ui_MainWindow_gongzuo()
        video_path = kk
        video_save_path = "outvideo.mp4"
        video_fps = 25.0
        test_interval = 100
        capture = cv2.VideoCapture(video_path)
        # 笔记本摄像头接1

        if kk == "1":
         capture = cv2.VideoCapture(1)
        if video_save_path != "":
            fourcc = cv2.VideoWriter_fourcc(*'mp4v')
            size = (int(capture.get(cv2.CAP_PROP_FRAME_WIDTH)), int(capture.get(cv2.CAP_PROP_FRAME_HEIGHT)))
            out = cv2.VideoWriter(video_save_path, fourcc, video_fps, size)

            ref, frame = capture.read()
        if not ref:
            raise ValueError("未能正确读取摄像头（视频），请注意是否正确安装摄像头（是否正确填写视频路径）。")

        fps = 0.0
        while (True):
            t1 = time.time()
            # 读取某一帧
            ref, frame = capture.read()
            if not ref:
                break
            # 格式转变，BGRtoRGB
            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
            # 转变成Image
            frame = Image.fromarray(np.uint8(frame))
            # 进行检测
            frame = np.array(deeplab.detect_image(frame))
            # RGBtoBGR满足opencv显示格式
            frame = cv2.cvtColor(frame, cv2.COLOR_RGB2BGR)

            fps = (fps + (1. / (time.time() - t1))) / 2
            x1 = "fps= %.2f" % (fps)
            # print(x1)

            frame = cv2.putText(frame, "fps= %.2f" % (fps), (0, 40), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
            im = Image.fromarray(frame)
            a = QImage(frame.data, frame.shape[1], frame.shape[0], QImage.Format_RGB888)
           # im.show()
            #px=QPixmap(im)
            self.label_tupian.setPixmap(QPixmap.fromImage(a))

            # cv2.imshow("video", frame)
            c = cv2.waitKey(1) & 0xff
            if video_save_path != "":
                out.write(frame)

            if c == 27:
                capture.release()
                break
        #print("Video Detection Done!")
        #
        capture.release()
        if video_save_path != "":
            #print("Save processed video to the path :" + video_save_path)
            out.release()
        cv2.destroyAllWindows()
    def shibievideo111(self,kk):###摄像头实时检测
        deeplab = DeeplabV3()
        nnn = Ui_MainWindow()
       # video_path = kk
        video_save_path = "outvideo.mp4"
        video_fps = 25.0
        test_interval = 100
       # capture = cv2.VideoCapture(video_path)
        # 笔记本摄像头接1
       # if kk == "1":
        capture = cv2.VideoCapture(0)
        if video_save_path != "":
            fourcc = cv2.VideoWriter_fourcc(*'mp4v')
            size = (int(capture.get(cv2.CAP_PROP_FRAME_WIDTH)), int(capture.get(cv2.CAP_PROP_FRAME_HEIGHT)))
            out = cv2.VideoWriter(video_save_path, fourcc, video_fps, size)
            ref, frame = capture.read()
        if not ref:
            raise ValueError("未能正确读取摄像头（视频），请注意是否正确安装摄像头（是否正确填写视频路径）。")
        fps = 0.0
        while (True):
            if glo.ttt > 50: ##
                break
            t1 = time.time()
            # 读取某一帧
            ref, frame = capture.read()
            if not ref:
                break
            # 格式转变，BGRtoRGB
            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
            # 转变成Image
            frame = Image.fromarray(np.uint8(frame))
            # 进行检测
            frame = np.array(deeplab.detect_image(frame))
            # RGBtoBGR满足opencv显示格式
            frame = cv2.cvtColor(frame, cv2.COLOR_RGB2BGR)
            fps = (fps + (1. / (time.time() - t1))) / 2
            x1 = "fps= %.2f" % (fps)
            # print(x1)
            frame = cv2.putText(frame, "fps= %.2f" % (fps), (0, 40), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
            im = Image.fromarray(frame)
            a = QImage(frame.data, frame.shape[1], frame.shape[0], QImage.Format_RGB888)
           # im.show()
            #px=QPixmap(im)
            self.label_tupian.setPixmap(QPixmap.fromImage(a))
            # cv2.imshow("video", frame)
            c = cv2.waitKey(1) & 0xff
            if video_save_path != "":
                out.write(frame)
            if c == 27:
                capture.release()
                break
        #
        capture.release()
        if video_save_path != "":
            out.release()
        cv2.destroyAllWindows()

    def xls(self):
        book = xlwt.Workbook()
        sheet = book.add_sheet('数据表')
        sheet.write(0, 0, '矿井')
        sheet.write(0, 1, '时间')
        sheet.write(0, 2, '煤像素点')
        sheet.write(0, 3, '煤占比')
        for i in range(0, self.tableWidget_2.rowCount()):
            for j in range(0, self.tableWidget_2.columnCount()):
                try:
                    sheet.write(i + 1, j, self.tableWidget_2.item(i, j).text())
                except:
                    continue
        now_time = datetime.datetime.now()
        now_time_str = datetime.datetime.strftime(now_time, '%Y-%m-%d')
        book.save("矿井一"+now_time_str + '.xls')

    def getdir(self):
         # 启动线程
        self.thread.start()
        #self.thread.is_on = True
        self.thread.my_signal.connect(self.get_progress)#####发送信号

    def get_progress(self,tt):
        if tt >= 131:
            self.progressBar_1.setValue(100)
            self.label_11.setText('100%')
            self.progressBar_1.setValue(0)
            self.label_11.setText('0%')
            QMessageBox.warning(self, "提示", "文件检测完毕", QMessageBox.Yes)
        else:
            self.progressBar_1.setValue(int(tt*100/131))###接收信号
            self.label_11.setText(str(round(tt*100/131,2))+'%')#####接收信号


    def get_slider1(self, text1):
        #self.pushButton_working.setDown(False)
        self.label_slider1.setNum(text1)########给滑动条赋值
        self.horizontalSlider.setValue(text1)####给label赋值

    def get_slider2(self, text2):
        # 追加文本到文本框
        self.label_slider2.setNum(text2)########给滑动条赋值
        self.horizontalSlider_2.setValue(text2)####给label赋值

    def deng(self,sgl1):
        #print(sgl1)
        #print(sgl1)
        date = QDateTime.currentDateTime()
        current_time1 = date.toString("yyyy-MM-dd hh:mm:ss")
        if sgl1 =='0':###########接受danger信号
            self.pushButton_danger.setDown(True)######danger亮
            self.pushButton_working.setDown(False)####working灭
            self.pushButton_warning.setDown(False)####warning灭
            self.textEdit_2.append(current_time1+'danger')######输出异常情况
        elif sgl1=="1":###########接受working信号
            self.pushButton_working.setDown(True)####working亮
            self.pushButton_danger.setDown(False)######danger灭
            self.pushButton_warning.setDown(False)####warning灭
        elif sgl1=="2":###########接受warning信号
            self.pushButton_warning.setDown(True)####warning亮
            self.pushButton_danger.setDown(False)######danger灭
            self.pushButton_working.setDown(False)####working灭
            self.textEdit_2.append( current_time1+'warning')######输出异常情况

    def threading_slot1(self,a):
        self.myChart.handleUpdate1(a)
        # 实时刷新界面
        QApplication.processEvents()

    def threading_slot2(self,b):
        self.myChart.handleUpdate2(b)
        # 实时刷新界面
        QApplication.processEvents()

class TestChart(QChart):
    def __init__(self):
        super(TestChart, self).__init__()
        self.xRange = 100
        self.sampleRate = 1
        self.counter = 0
        self.seriesList = []
        self.legend().show()

        self.axisX = QValueAxis()
        self.axisX.setRange(0, self.xRange)
        self.addAxis(self.axisX, Qt.AlignBottom)
        # self.setAxisX(self.axisX, series)

        self.axisY = QValueAxis()
        self.axisY.setRange(40, 70)
        self.addAxis(self.axisY, Qt.AlignLeft)
        # self.setAxisY(self.axisY, series)

        self.series1 = QLineSeries()
        self.series1.setName("机体水平状态")
        self.series1.setUseOpenGL(True)
        self.addSeries(self.series1)
        self.series1.attachAxis(self.axisX)
        self.series1.attachAxis(self.axisY)
        self.series2 = QLineSeries()
        self.series2.setName("机体垂直状态")
        self.series2.setUseOpenGL(True)
        self.addSeries(self.series2)
        self.series2.attachAxis(self.axisX)
        self.series2.attachAxis(self.axisY)

        self.series1.setPen(QColor(153, 232, 83))#####################图线一颜色
        self.series2.setPen(QColor(64, 64, 64))#######################图线二颜色
        self.setBackgroundBrush(QBrush(QColor(255, 255, 255)))########背景颜色

    def handleUpdate1(self, ydata):#################图线一绘制函数
        if (self.counter < self.xRange):
            for i in range(self.sampleRate):
                self.series1.append(self.counter + i, ydata)
        else:

            points = self.series1.pointsVector()
            y_temp = [0] * (len(points) - self.sampleRate)
            for i in range(len(points) - self.sampleRate):
                points[i].setY(points[i + self.sampleRate].y())
                y_temp[i] = points[i + self.sampleRate].y()
            for i in range(self.sampleRate):
                points[len(points) - (self.sampleRate - i)].setY(ydata)
            self.series1.replace(points)
            #self.series.setProperty("class","danger")
            self.axisY.setRange(min(y_temp), max(y_temp))

        self.series1.setUseOpenGL(True)
        self.counter += self.sampleRate

    def handleUpdate2(self, ydata):##################图线二绘制函数

        if (self.counter < self.xRange):
            for i in range(self.sampleRate):
                self.series2.append(self.counter + i, ydata)
        else:

            points2 = self.series2.pointsVector()
            y_temp = [0] * (len(points2) - self.sampleRate)
            for i in range(len(points2) - self.sampleRate):
                points2[i].setY(points2[i + self.sampleRate].y())
                y_temp[i] = points2[i + self.sampleRate].y()
            for i in range(self.sampleRate):
                points2[len(points2) - (self.sampleRate - i)].setY(ydata)
            self.series2.replace(points2)
            #self.series.setProperty("class","danger")
            self.axisY.setRange(min(y_temp), max(y_temp))

        self.series2.setUseOpenGL(True)
        self.counter += self.sampleRate


class MyThread(QThread):  ##############################文件夹检测线程
    my_signal = pyqtSignal(int)  # 自定义信号对象。参数str就代表这个信号可以传一个字符串
    def __init__(self):
        super(MyThread, self).__init__()
        self.count = 0
        #self.is_on = True
        # self.h = Ui_Hello()

    def run(self):
        #print("22")
        glo.directory = QFileDialog.getExistingDirectory(None, "选取文件夹", "./")
        # 起始路径
        while 1:
            #print("11")
            deeplab = DeeplabV3()
            dir_origin_path = str(glo.directory)
            dir_save_path = "outtest/"
            img_names = os.listdir(dir_origin_path)
            for img_name in tqdm(img_names):
                if img_name.lower().endswith(
                        ('.bmp', '.dib', '.png', '.jpg', '.jpeg', '.pbm', '.pgm', '.ppm', '.tif', '.tiff')):
                    image_path = os.path.join(dir_origin_path, img_name)
                    image = Image.open(image_path)
                    r_image = deeplab.detect_image(image)
                    self.count =self.count+1


                    self.my_signal.emit(self.count)
                    #print(self.count)
                    if not os.path.exists(dir_save_path):
                        os.makedirs(dir_save_path)

                    r_image.save(os.path.join(dir_save_path, img_name))
                    # self.sleep(1)
            #print("dir finshed")
            #self.my_thread.is_on = False
            #self.my_thread.count = 0
            break

class MyThread_2(QThread):  ##############################图片检测线程

    def __init__(self):
        super(MyThread_2, self).__init__()

    def run(self):
        #print('1')
        self.fileName1, self.fileType1 = QtWidgets.QFileDialog.getOpenFileName(None, "选取文件", "./",
                                                                                   "All Files (*);;Excel Files (*.xls)")  # 设置文件扩展名过滤,注意用双分号间隔
        # print(self.fileType1)
        showimag=predict.shibiepic2(str(self.fileName1))
        showimag.show()


class MyThread_3(QThread):#########################设备运转情况线程
    send_signal_3 = pyqtSignal(str)

    def run(self):
        while True:
            date = QDateTime.currentDateTime()
            current_time = date.toString("yyyy-MM-dd hh:mm:ss")
            self.send_signal_3.emit(current_time)
            time.sleep(1)

class MyThread_4(QThread):#########################视频检测线程
    send_signal = pyqtSignal(str)
#
    def run(self):
        self.fileName2, self.fileType2 = QFileDialog.getOpenFileName(None, "选取文件", "./",
                                                                     "All Files (*);;Excel Files (*.xls)")  # 设置文件扩展名过滤,注意用双分号间隔
        predict.shibievideo(str(self.fileName2))
        #print(glo.A, glo.B)


class MyThread_5(QThread):#########################机体水平状态，图线一线程
    send_signal_5 = pyqtSignal(int)

    def run(self):
        while True:
            #print(1)
            for i in range(200 ^ 30000):
                num = random.randint(47, 53)
                self.send_signal_5.emit(num)
                time.sleep(0.2)

class MyThread_6(QThread):##########################机体垂直状态，图线一线程
    send_signal_6 = pyqtSignal(int)

    def run(self):
        while True:
            #print(1)
            for i in range(200 ^ 30000):
                num = random.randint(47, 53)
                self.send_signal_6.emit(num)
                time.sleep(0.2)

class MyThread_7(QThread):################################指示灯线程
    send_signal_7 = pyqtSignal(str)
    def run(self):
        while 1:
            time.sleep(0.5)
            #print(glo.line2)
            if (glo.line2 >=0.1):#########判断煤占比
                Signled = "1"
                self.send_signal_7.emit(str(Signled))#######发送working信号
                #print("发出1sbs"+Signled)
            elif (glo.line2 <0.1and glo.line2!=0):############判断煤占比
                Signled ="2"
                self.send_signal_7.emit(str(Signled))###########发送warning信号
                #print("发出2sbs" + Signled)
            else:
                Signled = "0"
                self.send_signal_7.emit(str(Signled))#########发送danger信号
                #print("发出0sbs" + Signled)

class MyThread_8(QThread):######################空线程
    send_signal = pyqtSignal(str)

    def run(self):
        while True:
            date = QDateTime.currentDateTime()
            current_time = date.toString("yyyy-MM-dd hh:mm:ss")
            self.send_signal.emit(current_time)
            time.sleep(1)

class MyThread_9(QThread):##########################空线程
    send_signal = pyqtSignal(str)

    def run(self):
        while True:
            date = QDateTime.currentDateTime()
            current_time = date.toString("yyyy-MM-dd hh:mm:ss")
            self.send_signal.emit(current_time)
            time.sleep(1)

class MyThread_10(QThread):##########################空线程
    send_signal = pyqtSignal(str)

    def run(self):
        while True:
            date = QDateTime.currentDateTime()
            current_time = date.toString("yyyy-MM-dd hh:mm:ss")
            self.send_signal.emit(current_time)
            time.sleep(1)


if __name__ == '__main__':
    app = QApplication(sys.argv)
    form = QMainWindow()
    window = Ui_MainWindow_gongzuo()
    window.setupUi(form)
    apply_stylesheet(app, theme='dark_cyan.xml',extra=extra)
    form.show()
    sys.exit(app.exec_())